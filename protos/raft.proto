syntax = "proto3";

package raft;

// === Service ===
service Raft {
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
}

// === RequestVote ===
message RequestVoteRequest {
  uint64 term = 1;
  uint64 candidate_id = 2;
}

// === RequestVote Response ===
message RequestVoteResponse {
  uint64 term = 1;
  bool vote_granted = 2;
}

// === Log Entry ===
message LogEntry {
  uint64 term = 1;
  bytes command = 2; // KV command (serialized)
}

// === AppendEntries RPC ===
message AppendEntriesRequest {
  uint64 term = 1;
  uint64 leader_id = 2;
  uint64 prev_log_index = 3;
  uint64 prev_log_term = 4;
  repeated LogEntry entries = 5;
  uint64 leader_commit = 6;
}

message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
}
